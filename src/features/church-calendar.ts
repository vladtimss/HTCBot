export const a = 2;
// src/features/church-calendar.ts
import { Bot } from "grammy";
import { MyContext } from "../types/grammy-context";
import { MENU_LABELS } from "../constants/button-lables";
import { replyMainKeyboard } from "../utils/keyboards";
import {
	fetchUpcomingEvents,
	fetchNextEventByTitle,
	fetchAllFutureEventsByTitle,
	fetchHolidayEvent,
	formatEvent,
} from "../services/calendar";

/**
 * –†–µ–Ω–¥–µ—Ä –∫–æ—Ä–Ω—è —Ä–∞–∑–¥–µ–ª–∞ ¬´–¶–µ—Ä–∫–æ–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å¬ª
 */
export async function renderCalendarRoot(ctx: MyContext) {
	ctx.session.lastSection = "calendar";
	ctx.session.menuStack = ["calendar"];

	await ctx.reply("üìÖ –¶–µ—Ä–∫–æ–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å:", {
		reply_markup: {
			keyboard: [
				["–ß–ª–µ–Ω—Å–∫–∏–µ —Å–æ–±—Ä–∞–Ω–∏—è", "–ú–æ–ª–∏—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω–∏—è"],
				["–õ–ú–ì", "–û—Ç—Ü—ã –∏ –¥–µ—Ç–∏ / –í—Å—Ç—Ä–µ—á–∞ —Å–µ—Å—Ç–µ—Ä"],
				["–ë–æ–ª—å—à–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏"],
				["–ü–æ–∫–∞–∑–∞—Ç—å —Ç—Ä–∏ –±–ª–∏–∂–∞–π—à–∏—Ö —Å–æ–±—ã—Ç–∏—è"],
				[MENU_LABELS.BACK, MENU_LABELS.MAIN],
			],
			resize_keyboard: true,
		},
	});
}

/**
 * –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–∑–¥–µ–ª ¬´–¶–µ—Ä–∫–æ–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å¬ª
 */
export function registerChurchCalendar(bot: Bot<MyContext>) {
	// --- –ú–µ–Ω—é –∫–∞–ª–µ–Ω–¥–∞—Ä—è ---
	bot.hears(MENU_LABELS.CALENDAR, async (ctx) => {
		await renderCalendarRoot(ctx);
	});

	// --- 3 –±–ª–∏–∂–∞–π—à–∏—Ö —Å–æ–±—ã—Ç–∏—è ---
	bot.hears("–ü–æ–∫–∞–∑–∞—Ç—å —Ç—Ä–∏ –±–ª–∏–∂–∞–π—à–∏—Ö —Å–æ–±—ã—Ç–∏—è", async (ctx) => {
		const events = await fetchUpcomingEvents(3);
		if (events.length === 0) {
			await ctx.reply("–ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π.");
			return;
		}
		await ctx.reply("*–ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è:*\n\n" + events.map(formatEvent).join("\n\n"), {
			parse_mode: "Markdown",
		});
	});

	// --- –õ–ú–ì ---
	bot.hears("–õ–ú–ì", async (ctx) => {
		ctx.session.menuStack.push("lmg");
		await ctx.reply("üìñ –õ–ú–ì:", {
			reply_markup: {
				keyboard: [
					["–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∞—è –≤—Å—Ç—Ä–µ—á–∞ –õ–ú–ì"],
					["–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—É–¥—É—â–∏—Ö –≤—Å—Ç—Ä–µ—á –õ–ú–ì"],
					[MENU_LABELS.BACK, MENU_LABELS.MAIN],
				],
				resize_keyboard: true,
			},
		});
	});

	bot.hears("–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∞—è –≤—Å—Ç—Ä–µ—á–∞ –õ–ú–ì", async (ctx) => {
		const ev = await fetchNextEventByTitle("–ª–º–≥");
		if (!ev) {
			await ctx.reply("–°–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏ –õ–ú–ì –ø–æ–∫–∞ –Ω–µ—Ç.");
			return;
		}
		await ctx.reply("*–°–ª–µ–¥—É—é—â–∞—è –≤—Å—Ç—Ä–µ—á–∞ –õ–ú–ì:*\n\n" + formatEvent(ev), { parse_mode: "Markdown" });
	});

	bot.hears("–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—É–¥—É—â–∏—Ö –≤—Å—Ç—Ä–µ—á –õ–ú–ì", async (ctx) => {
		const events = await fetchAllFutureEventsByTitle("–ª–º–≥");
		if (events.length === 0) {
			await ctx.reply("–ë—É–¥—É—â–∏—Ö –≤—Å—Ç—Ä–µ—á –õ–ú–ì –ø–æ–∫–∞ –Ω–µ—Ç.");
			return;
		}
		await ctx.reply(events.map(formatEvent).join("\n\n"), { parse_mode: "Markdown" });
	});

	// --- –ú–æ–ª–∏—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω–∏—è ---
	bot.hears("–ú–æ–ª–∏—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω–∏—è", async (ctx) => {
		ctx.session.menuStack.push("prayers");
		await ctx.reply("üôè –ú–æ–ª–∏—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω–∏—è:", {
			reply_markup: {
				keyboard: [
					["–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ –º–æ–ª–∏—Ç–≤–µ–Ω–Ω–æ–µ"],
					["–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—É–¥—É—â–∏—Ö –º–æ–ª–∏—Ç–≤–µ–Ω–Ω—ã—Ö"],
					[MENU_LABELS.BACK, MENU_LABELS.MAIN],
				],
				resize_keyboard: true,
			},
		});
	});

	bot.hears("–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ –º–æ–ª–∏—Ç–≤–µ–Ω–Ω–æ–µ", async (ctx) => {
		const ev = await fetchNextEventByTitle("–º–æ–ª–∏—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ");
		if (!ev) {
			await ctx.reply("–°–ª–µ–¥—É—é—â–µ–µ –º–æ–ª–∏—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ –ø–æ–∫–∞ –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ.");
			return;
		}
		await ctx.reply("*–°–ª–µ–¥—É—é—â–µ–µ –º–æ–ª–∏—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ:*\n\n" + formatEvent(ev), {
			parse_mode: "Markdown",
		});
	});

	bot.hears("–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—É–¥—É—â–∏—Ö –º–æ–ª–∏—Ç–≤–µ–Ω–Ω—ã—Ö", async (ctx) => {
		const events = await fetchAllFutureEventsByTitle("–º–æ–ª–∏—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ");
		if (events.length === 0) {
			await ctx.reply("–ë—É–¥—É—â–∏—Ö –º–æ–ª–∏—Ç–≤–µ–Ω–Ω—ã—Ö —Å–æ–±—Ä–∞–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç.");
			return;
		}
		await ctx.reply(events.map(formatEvent).join("\n\n"), { parse_mode: "Markdown" });
	});

	// --- –ß–ª–µ–Ω—Å–∫–∏–µ —Å–æ–±—Ä–∞–Ω–∏—è ---
	bot.hears("–ß–ª–µ–Ω—Å–∫–∏–µ —Å–æ–±—Ä–∞–Ω–∏—è", async (ctx) => {
		ctx.session.menuStack.push("members");
		await ctx.reply("üë• –ß–ª–µ–Ω—Å–∫–∏–µ —Å–æ–±—Ä–∞–Ω–∏—è:", {
			reply_markup: {
				keyboard: [
					["–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ —á–ª–µ–Ω—Å–∫–æ–µ"],
					["–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—É–¥—É—â–∏—Ö —á–ª–µ–Ω—Å–∫–∏—Ö"],
					[MENU_LABELS.BACK, MENU_LABELS.MAIN],
				],
				resize_keyboard: true,
			},
		});
	});

	bot.hears("–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ —á–ª–µ–Ω—Å–∫–æ–µ", async (ctx) => {
		const ev = await fetchNextEventByTitle("—á–ª–µ–Ω—Å–∫–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ");
		if (!ev) {
			await ctx.reply("–°–ª–µ–¥—É—é—â–µ–µ —á–ª–µ–Ω—Å–∫–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ –ø–æ–∫–∞ –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ.");
			return;
		}
		await ctx.reply("*–°–ª–µ–¥—É—é—â–µ–µ —á–ª–µ–Ω—Å–∫–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ:*\n\n" + formatEvent(ev), {
			parse_mode: "Markdown",
		});
	});

	bot.hears("–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—É–¥—É—â–∏—Ö —á–ª–µ–Ω—Å–∫–∏—Ö", async (ctx) => {
		const events = await fetchAllFutureEventsByTitle("—á–ª–µ–Ω—Å–∫–æ–µ —Å–æ–±—Ä–∞–Ω–∏–µ");
		if (events.length === 0) {
			await ctx.reply("–ë—É–¥—É—â–∏—Ö —á–ª–µ–Ω—Å–∫–∏—Ö —Å–æ–±—Ä–∞–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç.");
			return;
		}
		await ctx.reply(events.map(formatEvent).join("\n\n"), { parse_mode: "Markdown" });
	});

	// --- –ë–æ–ª—å—à–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ ---
	bot.hears("–ë–æ–ª—å—à–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏", async (ctx) => {
		ctx.session.menuStack.push("holidays");
		await ctx.reply("üéâ –ë–æ–ª—å—à–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏:", {
			reply_markup: {
				keyboard: [
					["–£–∑–Ω–∞—Ç—å –¥–∞—Ç—ã –†–í", "–£–∑–Ω–∞—Ç—å –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –ü–∞—Å—Ö–∞"],
					[MENU_LABELS.BACK, MENU_LABELS.MAIN],
				],
				resize_keyboard: true,
			},
		});
	});

	bot.hears("–£–∑–Ω–∞—Ç—å –¥–∞—Ç—ã –†–í", async (ctx) => {
		const year = new Date().getFullYear();
		const ev = await fetchHolidayEvent("–†–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∏–π –≤—ã–µ–∑–¥", year);
		if (!ev) {
			await ctx.reply(`–í ${year} –≥–æ–¥—É –†–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∏–π –≤—ã–µ–∑–¥ –µ—â—ë –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω.`);
			return;
		}
		await ctx.reply("*–†–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∏–π –≤—ã–µ–∑–¥:*\n\n" + formatEvent(ev), { parse_mode: "Markdown" });
	});

	bot.hears("–£–∑–Ω–∞—Ç—å –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –ü–∞—Å—Ö–∞", async (ctx) => {
		const year = new Date().getFullYear();
		const ev = await fetchHolidayEvent("–ø–∞—Å—Ö–∞", year);
		if (!ev) {
			await ctx.reply(`–í ${year} –≥–æ–¥—É –ü–∞—Å—Ö–∞ –µ—â—ë –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞.`);
			return;
		}
		await ctx.reply("*–ü–∞—Å—Ö–∞:*\n\n" + formatEvent(ev), { parse_mode: "Markdown" });
	});

	// --- –û—Ç—Ü—ã –∏ –¥–µ—Ç–∏ / –í—Å—Ç—Ä–µ—á–∞ —Å–µ—Å—Ç–µ—Ä ---
	bot.hears("–û—Ç—Ü—ã –∏ –¥–µ—Ç–∏ / –í—Å—Ç—Ä–µ—á–∞ —Å–µ—Å—Ç–µ—Ä", async (ctx) => {
		ctx.session.menuStack.push("family");
		await ctx.reply("üë®‚Äçüë©‚Äçüëß –û—Ç—Ü—ã –∏ –¥–µ—Ç–∏ / –í—Å—Ç—Ä–µ—á–∞ —Å–µ—Å—Ç–µ—Ä:", {
			reply_markup: {
				keyboard: [
					["–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∞—è –≤—Å—Ç—Ä–µ—á–∞ –û—Ç—Ü–æ–≤ –∏ –¥–µ—Ç–µ–π / —Å–µ—Å—Ç–µ—Ä"],
					["–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—É–¥—É—â–∏—Ö –≤—Å—Ç—Ä–µ—á –û—Ç—Ü–æ–≤ –∏ –¥–µ—Ç–µ–π / —Å–µ—Å—Ç–µ—Ä"],
					[MENU_LABELS.BACK, MENU_LABELS.MAIN],
				],
				resize_keyboard: true,
			},
		});
	});

	bot.hears("–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∞—è –≤—Å—Ç—Ä–µ—á–∞ –û—Ç—Ü–æ–≤ –∏ –¥–µ—Ç–µ–π / —Å–µ—Å—Ç–µ—Ä", async (ctx) => {
		const ev = await fetchNextEventByTitle("–æ—Ç—Ü—ã –∏ –¥–µ—Ç–∏");
		if (!ev) {
			await ctx.reply("–°–ª–µ–¥—É—é—â–∞—è –≤—Å—Ç—Ä–µ—á–∞ –û—Ç—Ü–æ–≤ –∏ –¥–µ—Ç–µ–π / —Å–µ—Å—Ç–µ—Ä –ø–æ–∫–∞ –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞.");
			return;
		}
		await ctx.reply("*–°–ª–µ–¥—É—é—â–∞—è –≤—Å—Ç—Ä–µ—á–∞ –û—Ç—Ü–æ–≤ –∏ –¥–µ—Ç–µ–π / —Å–µ—Å—Ç–µ—Ä:*\n\n" + formatEvent(ev), {
			parse_mode: "Markdown",
		});
	});

	bot.hears("–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—É–¥—É—â–∏—Ö –≤—Å—Ç—Ä–µ—á –û—Ç—Ü–æ–≤ –∏ –¥–µ—Ç–µ–π / —Å–µ—Å—Ç–µ—Ä", async (ctx) => {
		const events = await fetchAllFutureEventsByTitle("–æ—Ç—Ü—ã –∏ –¥–µ—Ç–∏");
		if (events.length === 0) {
			await ctx.reply("–ë—É–¥—É—â–∏—Ö –≤—Å—Ç—Ä–µ—á –û—Ç—Ü–æ–≤ –∏ –¥–µ—Ç–µ–π / —Å–µ—Å—Ç–µ—Ä –ø–æ–∫–∞ –Ω–µ—Ç.");
			return;
		}
		await ctx.reply(events.map(formatEvent).join("\n\n"), { parse_mode: "Markdown" });
	});
}
