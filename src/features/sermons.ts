import { Bot } from "grammy";
import { MyContext } from "../types/grammy-context";
import { env } from "../config/env";
import { replySermonsMenu } from "../utils/keyboards";
import { MENU_LABELS } from "../constants/button-lables";

/**
 * –†–µ–Ω–¥–µ—Ä –∫–æ—Ä–Ω—è —Ä–∞–∑–¥–µ–ª–∞ ¬´–ü—Ä–æ–ø–æ–≤–µ–¥–∏¬ª
 */
export async function renderSermonsRoot(ctx: MyContext) {
	ctx.session.menuStack = ["sermons"];
	ctx.session.lastSection = "sermons";

	await ctx.reply("*–ü—Ä–æ–ø–æ–≤–µ–¥–∏*", {
		parse_mode: "Markdown",
		reply_markup: replySermonsMenu,
	});
}

/**
 * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ —Ä–∞–∑–¥–µ–ª–∞ ¬´–ü—Ä–æ–ø–æ–≤–µ–¥–∏¬ª
 */
export function registerSermons(bot: Bot<MyContext>) {
	// –í—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
	bot.hears(MENU_LABELS.SERMONS, async (ctx) => {
		await renderSermonsRoot(ctx);
	});

	// –ü–æ–¥–∫–∞—Å—Ç—ã
	bot.hears(MENU_LABELS.SERMONS_PODCASTS, async (ctx) => {
		await ctx.reply(
			`üéß –ù–∞—à–∏ –ø—Ä–æ–ø–æ–≤–µ–¥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ø–æ–¥–∫–∞—Å—Ç–∞—Ö:\n\n` +
				`- [–Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–∞](${env.SERMONS_YANDEX_URL})\n` +
				`- [Podster.fm](${env.SERMONS_PODSTER_URL})`,
			{
				parse_mode: "Markdown",
				link_preview_options: { is_disabled: true },
				reply_markup: replySermonsMenu,
			}
		);
	});
}
