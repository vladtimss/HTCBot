// src/features/navigation.ts
import { Bot } from "grammy";
import { MyContext } from "../types/grammy-context";
import { MENU_LABELS } from "../constants/button-lables";
import { replyMainKeyboard } from "../utils/keyboards";
import { MAIN } from "../services/texts";

import { renderAboutRoot } from "./about-htc";
import { renderCalendarRoot } from "./church-calendar";

/**
 * üìå –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ ¬´‚¨ÖÔ∏è –ù–∞–∑–∞–¥¬ª
 * - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç menuStack –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
 */
export function registerNavigation(bot: Bot<MyContext>) {
	bot.hears(MENU_LABELS.BACK, async (ctx) => {
		console.log(1);
		// –ï—Å–ª–∏ —Å—Ç–µ–∫–∞ –Ω–µ—Ç –∏–ª–∏ –≤ –Ω—ë–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç ‚Üí –∫–∏–¥–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
		if (!ctx.session.menuStack || ctx.session.menuStack.length <= 1) {
			await ctx.reply(MAIN.title, {
				parse_mode: "Markdown",
				reply_markup: replyMainKeyboard(ctx),
			});
			ctx.session.lastSection = "main";
			ctx.session.menuStack = ["main"];
			return;
		}

		// –£–±–∏—Ä–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ä–∞–∑–¥–µ–ª
		ctx.session.menuStack.pop();
		const prev = ctx.session.menuStack[ctx.session.menuStack.length - 1];

		// –í—ã–±–∏—Ä–∞–µ–º —á—Ç–æ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–¥–µ–ª–∞
		switch (prev) {
			case "about":
				await renderAboutRoot(ctx);
				break;

			case "calendar":
			case "lmg":
			case "prayers":
			case "members":
			case "holidays":
			case "family":
				await renderCalendarRoot(ctx);
				break;

			default:
				// –µ—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ–º —á—Ç–æ —ç—Ç–æ ‚Üí –∫–∏–¥–∞–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
				await ctx.reply(MAIN.title, {
					parse_mode: "Markdown",
					reply_markup: replyMainKeyboard(ctx),
				});
				ctx.session.lastSection = "main";
				ctx.session.menuStack = ["main"];
				break;
		}
	});
}
