import { Bot, InlineKeyboard } from "grammy";
import { MyContext } from "../types/grammy-context";
import { ABOUT } from "../services/texts";
import { env } from "../config/env";
import { commonNav } from "../utils/keyboards";

export function registerAbout(bot: Bot<MyContext>) {
	bot.callbackQuery("nav:about", async (ctx) => {
		ctx.session.menuStack.push("about");
		const kb = new InlineKeyboard()
			.text(ABOUT.channelButton, "about:channel")
			.row()
			.text(ABOUT.beliefButton, "about:belief")
			.text(ABOUT.historyButton, "about:history")
			.row()
			.text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "nav:back")
			.row()
			.text("üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "nav:main");

		await ctx.editMessageText(`*${ABOUT.title}*`, {
			parse_mode: "Markdown",
			reply_markup: kb,
		});
	});

	bot.callbackQuery("about:channel", async (ctx) => {
		await ctx.editMessageText("*–ö–∞–Ω–∞–ª –Ω–∞—à–µ–π —Ü–µ—Ä–∫–≤–∏:*", {
			parse_mode: "Markdown",
			reply_markup: new InlineKeyboard()
				.url("–û—Ç–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª", env.CHANNEL_URL)
				.row()
				.text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "nav:back")
				.row()
				.text("üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "nav:main"),
		});
	});

	bot.callbackQuery("about:belief", async (ctx) => {
		await ctx.editMessageText(`*–í–æ —á—Ç–æ –º—ã –≤–µ—Ä–∏–º*\n\n${ABOUT.belief}`, {
			parse_mode: "Markdown",
			reply_markup: commonNav(),
		});
	});

	bot.callbackQuery("about:history", async (ctx) => {
		ctx.session.menuStack.push("history");
		console.log(ctx.session.menuStack);
		await ctx.editMessageText(`*–ù–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è*\n\n${ABOUT.history}`, {
			parse_mode: "Markdown",
			reply_markup: commonNav(),
		});
	});
}
